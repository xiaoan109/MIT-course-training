//
// Generated by Bluespec Compiler, version 2023.01 (build 52adafa5)
//
// On Sun Sep 29 06:52:56 UTC 2024
//
//
// Ports:
// Name                         I/O  size props
// RDY_request_put                O     1 reg
// response_get                   O   512 reg
// RDY_response_get               O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// request_put                    I   512 reg
// EN_request_put                 I     1
// EN_response_get                I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkFFT(CLK,
	     RST_N,

	     request_put,
	     EN_request_put,
	     RDY_request_put,

	     EN_response_get,
	     response_get,
	     RDY_response_get);
  input  CLK;
  input  RST_N;

  // action method request_put
  input  [511 : 0] request_put;
  input  EN_request_put;
  output RDY_request_put;

  // actionvalue method response_get
  input  EN_response_get;
  output [511 : 0] response_get;
  output RDY_response_get;

  // signals for module outputs
  wire [511 : 0] response_get;
  wire RDY_request_put, RDY_response_get;

  // register fft_counter
  reg [31 : 0] fft_counter;
  wire [31 : 0] fft_counter$D_IN;
  wire fft_counter$EN;

  // register fft_sReg_0
  reg [511 : 0] fft_sReg_0;
  wire [511 : 0] fft_sReg_0$D_IN;
  wire fft_sReg_0$EN;

  // register fft_sReg_1
  reg [511 : 0] fft_sReg_1;
  wire [511 : 0] fft_sReg_1$D_IN;
  wire fft_sReg_1$EN;

  // register fft_sReg_2
  reg [511 : 0] fft_sReg_2;
  wire [511 : 0] fft_sReg_2$D_IN;
  wire fft_sReg_2$EN;

  // ports of submodule fft_counter_double_write_error
  wire fft_counter_double_write_error$D_IN,
       fft_counter_double_write_error$EN,
       fft_counter_double_write_error$Q_OUT;

  // ports of submodule fft_inputFIFO
  wire [511 : 0] fft_inputFIFO$D_IN, fft_inputFIFO$D_OUT;
  wire fft_inputFIFO$CLR,
       fft_inputFIFO$DEQ,
       fft_inputFIFO$EMPTY_N,
       fft_inputFIFO$ENQ,
       fft_inputFIFO$FULL_N;

  // ports of submodule fft_outputFIFO
  wire [511 : 0] fft_outputFIFO$D_IN, fft_outputFIFO$D_OUT;
  wire fft_outputFIFO$CLR,
       fft_outputFIFO$DEQ,
       fft_outputFIFO$EMPTY_N,
       fft_outputFIFO$ENQ,
       fft_outputFIFO$FULL_N;

  // ports of submodule fft_sReg_0_double_write_error
  wire fft_sReg_0_double_write_error$D_IN,
       fft_sReg_0_double_write_error$EN,
       fft_sReg_0_double_write_error$Q_OUT;

  // ports of submodule fft_sReg_1_double_write_error
  wire fft_sReg_1_double_write_error$D_IN,
       fft_sReg_1_double_write_error$EN,
       fft_sReg_1_double_write_error$Q_OUT;

  // ports of submodule fft_sReg_2_double_write_error
  wire fft_sReg_2_double_write_error$D_IN,
       fft_sReg_2_double_write_error$EN,
       fft_sReg_2_double_write_error$Q_OUT;

  // rule scheduling signals
  wire CAN_FIRE_RL_fft_linear_fft,
       CAN_FIRE_request_put,
       CAN_FIRE_response_get,
       WILL_FIRE_RL_fft_linear_fft,
       WILL_FIRE_request_put,
       WILL_FIRE_response_get;

  // remaining internal signals
  wire [63 : 0] IF_fft_sReg_1_10_BIT_223_19_THEN_NEG_fft_sReg__ETC___d923,
		IF_fft_sReg_1_10_BIT_223_19_THEN_NEG_fft_sReg__ETC___d996,
		IF_fft_sReg_1_10_BIT_255_80_THEN_NEG_fft_sReg__ETC___d884,
		IF_fft_sReg_1_10_BIT_255_80_THEN_NEG_fft_sReg__ETC___d961,
		IF_fft_sReg_1_10_BIT_479_51_THEN_NEG_fft_sReg__ETC___d755,
		IF_fft_sReg_1_10_BIT_511_12_THEN_NEG_fft_sReg__ETC___d716,
		_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_127_70__ETC___d274,
		_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_223_28__ETC___d232,
		_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_255_87__ETC___d191,
		_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_351_45__ETC___d149,
		_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_383_04__ETC___d108,
		_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_479_3_T_ETC___d67,
		_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_511_2_T_ETC___d26,
		_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_95_11_T_ETC___d315,
		_0_CONCAT_IF_fft_sReg_0_64_BIT_127_16_THEN_NEG__ETC___d620,
		_0_CONCAT_IF_fft_sReg_0_64_BIT_223_74_THEN_NEG__ETC___d578,
		_0_CONCAT_IF_fft_sReg_0_64_BIT_255_33_THEN_NEG__ETC___d537,
		_0_CONCAT_IF_fft_sReg_0_64_BIT_351_49_THEN_NEG__ETC___d453,
		_0_CONCAT_IF_fft_sReg_0_64_BIT_383_91_THEN_NEG__ETC___d495,
		_0_CONCAT_IF_fft_sReg_0_64_BIT_479_66_THEN_NEG__ETC___d370,
		_0_CONCAT_IF_fft_sReg_0_64_BIT_511_08_THEN_NEG__ETC___d412,
		_0_CONCAT_IF_fft_sReg_0_64_BIT_95_57_THEN_NEG_f_ETC___d661,
		_0_CONCAT_IF_fft_sReg_1_10_BIT_127_035_THEN_NEG_ETC___d1039,
		_0_CONCAT_IF_fft_sReg_1_10_BIT_351_96_THEN_NEG__ETC___d800,
		_0_CONCAT_IF_fft_sReg_1_10_BIT_383_38_THEN_NEG__ETC___d842,
		_0_CONCAT_IF_fft_sReg_1_10_BIT_95_076_THEN_NEG__ETC___d1080,
		x__h106592,
		x__h110093,
		x__h119082,
		x__h122583,
		x__h12350,
		x__h137508,
		x__h149993,
		x__h178435,
		x__h190696,
		x__h207487,
		x__h210987,
		x__h220937,
		x__h224438,
		x__h234388,
		x__h237888,
		x__h241289,
		x__h24871,
		x__h253772,
		x__h284137,
		x__h298320,
		x__h37392,
		x__h49913,
		x__h53841,
		x__h66138,
		x__h78435,
		x__h90732;
  wire [47 : 0] IF_fft_inputFIFO_first__0_BIT_127_70_THEN_NEG__ETC___d288,
		IF_fft_inputFIFO_first__0_BIT_223_28_THEN_NEG__ETC___d246,
		IF_fft_inputFIFO_first__0_BIT_255_87_THEN_NEG__ETC___d205,
		IF_fft_inputFIFO_first__0_BIT_351_45_THEN_NEG__ETC___d163,
		IF_fft_inputFIFO_first__0_BIT_383_04_THEN_NEG__ETC___d122,
		IF_fft_inputFIFO_first__0_BIT_479_3_THEN_NEG_0_ETC___d81,
		IF_fft_inputFIFO_first__0_BIT_511_2_THEN_NEG_0_ETC___d40,
		IF_fft_inputFIFO_first__0_BIT_95_11_THEN_NEG_0_ETC___d329,
		IF_fft_sReg_0_64_BIT_127_16_THEN_NEG_0_CONCAT__ETC___d634,
		IF_fft_sReg_0_64_BIT_223_74_THEN_NEG_0_CONCAT__ETC___d592,
		IF_fft_sReg_0_64_BIT_255_33_THEN_NEG_0_CONCAT__ETC___d551,
		IF_fft_sReg_0_64_BIT_351_49_THEN_0_CONCAT_IF_f_ETC___d467,
		IF_fft_sReg_0_64_BIT_383_91_THEN_0_CONCAT_IF_f_ETC___d509,
		IF_fft_sReg_0_64_BIT_479_66_THEN_0_CONCAT_IF_f_ETC___d384,
		IF_fft_sReg_0_64_BIT_511_08_THEN_0_CONCAT_IF_f_ETC___d426,
		IF_fft_sReg_0_64_BIT_95_57_THEN_NEG_0_CONCAT_I_ETC___d675,
		IF_fft_sReg_1_10_BIT_127_035_THEN_NEG_0_CONCAT_ETC___d1053,
		IF_fft_sReg_1_10_BIT_223_19_THEN_IF_fft_sReg_1_ETC___d937,
		IF_fft_sReg_1_10_BIT_223_19_THEN_NEG_IF_fft_sR_ETC___d1010,
		IF_fft_sReg_1_10_BIT_255_80_THEN_IF_fft_sReg_1_ETC___d975,
		IF_fft_sReg_1_10_BIT_255_80_THEN_NEG_IF_fft_sR_ETC___d898,
		IF_fft_sReg_1_10_BIT_351_96_THEN_0_CONCAT_IF_f_ETC___d814,
		IF_fft_sReg_1_10_BIT_383_38_THEN_0_CONCAT_IF_f_ETC___d856,
		IF_fft_sReg_1_10_BIT_479_51_THEN_IF_fft_sReg_1_ETC___d769,
		IF_fft_sReg_1_10_BIT_511_12_THEN_IF_fft_sReg_1_ETC___d730,
		IF_fft_sReg_1_10_BIT_95_076_THEN_NEG_0_CONCAT__ETC___d1094,
		x__h106179,
		x__h109680,
		x__h118669,
		x__h11937,
		x__h122170,
		x__h137095,
		x__h149580,
		x__h178022,
		x__h190283,
		x__h207074,
		x__h210574,
		x__h220524,
		x__h224025,
		x__h233975,
		x__h237475,
		x__h240876,
		x__h24458,
		x__h253359,
		x__h283724,
		x__h297907,
		x__h36979,
		x__h49500,
		x__h53428,
		x__h65725,
		x__h78022,
		x__h90319;
  wire [31 : 0] IF_NOT_IF_NOT_IF_fft_sReg_1_10_BIT_479_51_THEN_ETC___d789,
		IF_NOT_IF_NOT_IF_fft_sReg_1_10_BIT_511_12_THEN_ETC___d750,
		x__h102702,
		x__h109247,
		x__h109266,
		x__h115491,
		x__h121737,
		x__h121756,
		x__h127981,
		x__h134224,
		x__h134243,
		x__h140466,
		x__h146709,
		x__h146728,
		x__h152946,
		x__h153080,
		x__h15312,
		x__h158977,
		x__h165210,
		x__h165344,
		x__h171241,
		x__h177474,
		x__h177608,
		x__h183504,
		x__h1864,
		x__h189735,
		x__h189869,
		x__h195765,
		x__h202630,
		x__h207593,
		x__h210141,
		x__h210160,
		x__h211026,
		x__h21581,
		x__h21602,
		x__h217346,
		x__h223592,
		x__h223611,
		x__h229836,
		x__h234494,
		x__h237042,
		x__h237061,
		x__h237927,
		x__h244245,
		x__h250488,
		x__h250507,
		x__h256725,
		x__h256859,
		x__h263718,
		x__h270912,
		x__h271046,
		x__h276943,
		x__h27833,
		x__h283176,
		x__h283310,
		x__h290167,
		x__h297359,
		x__h297493,
		x__h303389,
		x__h34102,
		x__h34123,
		x__h40354,
		x__h46623,
		x__h46644,
		x__h52870,
		x__h53014,
		x__h58926,
		x__h65167,
		x__h65311,
		x__h71223,
		x__h77464,
		x__h77608,
		x__h83520,
		x__h89761,
		x__h89905,
		x__h9060,
		x__h9081,
		x__h95817;
  wire [15 : 0] y_f__h107766,
		y_f__h111200,
		y_f__h120256,
		y_f__h123690,
		y_f__h13459,
		y_f__h138613,
		y_f__h151098,
		y_f__h179584,
		y_f__h191845,
		y_f__h208660,
		y_f__h212093,
		y_f__h222111,
		y_f__h225545,
		y_f__h235561,
		y_f__h238994,
		y_f__h242393,
		y_f__h254877,
		y_f__h25980,
		y_f__h285285,
		y_f__h299469,
		y_f__h38501,
		y_f__h51022,
		y_f__h55002,
		y_f__h67299,
		y_f__h79596,
		y_f__h91893;
  wire fft_counter_SLT_3___d6,
       fft_sReg_2_double_write_error_read_AND_NOT_fft_ETC___d15;

  // action method request_put
  assign RDY_request_put = fft_inputFIFO$FULL_N ;
  assign CAN_FIRE_request_put = fft_inputFIFO$FULL_N ;
  assign WILL_FIRE_request_put = EN_request_put ;

  // actionvalue method response_get
  assign response_get = fft_outputFIFO$D_OUT ;
  assign RDY_response_get = fft_outputFIFO$EMPTY_N ;
  assign CAN_FIRE_response_get = fft_outputFIFO$EMPTY_N ;
  assign WILL_FIRE_response_get = EN_response_get ;

  // submodule fft_counter_double_write_error
  RevertReg #(.width(32'd1),
	      .init(1'd1)) fft_counter_double_write_error(.CLK(CLK),
							  .D_IN(fft_counter_double_write_error$D_IN),
							  .EN(fft_counter_double_write_error$EN),
							  .Q_OUT(fft_counter_double_write_error$Q_OUT));

  // submodule fft_inputFIFO
  FIFO2 #(.width(32'd512), .guarded(1'd1)) fft_inputFIFO(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(fft_inputFIFO$D_IN),
							 .ENQ(fft_inputFIFO$ENQ),
							 .DEQ(fft_inputFIFO$DEQ),
							 .CLR(fft_inputFIFO$CLR),
							 .D_OUT(fft_inputFIFO$D_OUT),
							 .FULL_N(fft_inputFIFO$FULL_N),
							 .EMPTY_N(fft_inputFIFO$EMPTY_N));

  // submodule fft_outputFIFO
  FIFO2 #(.width(32'd512), .guarded(1'd1)) fft_outputFIFO(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(fft_outputFIFO$D_IN),
							  .ENQ(fft_outputFIFO$ENQ),
							  .DEQ(fft_outputFIFO$DEQ),
							  .CLR(fft_outputFIFO$CLR),
							  .D_OUT(fft_outputFIFO$D_OUT),
							  .FULL_N(fft_outputFIFO$FULL_N),
							  .EMPTY_N(fft_outputFIFO$EMPTY_N));

  // submodule fft_sReg_0_double_write_error
  RevertReg #(.width(32'd1),
	      .init(1'd1)) fft_sReg_0_double_write_error(.CLK(CLK),
							 .D_IN(fft_sReg_0_double_write_error$D_IN),
							 .EN(fft_sReg_0_double_write_error$EN),
							 .Q_OUT(fft_sReg_0_double_write_error$Q_OUT));

  // submodule fft_sReg_1_double_write_error
  RevertReg #(.width(32'd1),
	      .init(1'd1)) fft_sReg_1_double_write_error(.CLK(CLK),
							 .D_IN(fft_sReg_1_double_write_error$D_IN),
							 .EN(fft_sReg_1_double_write_error$EN),
							 .Q_OUT(fft_sReg_1_double_write_error$Q_OUT));

  // submodule fft_sReg_2_double_write_error
  RevertReg #(.width(32'd1),
	      .init(1'd1)) fft_sReg_2_double_write_error(.CLK(CLK),
							 .D_IN(fft_sReg_2_double_write_error$D_IN),
							 .EN(fft_sReg_2_double_write_error$EN),
							 .Q_OUT(fft_sReg_2_double_write_error$Q_OUT));

  // rule RL_fft_linear_fft
  assign CAN_FIRE_RL_fft_linear_fft =
	     fft_inputFIFO$EMPTY_N && fft_sReg_0_double_write_error$Q_OUT &&
	     fft_sReg_1_double_write_error$Q_OUT &&
	     fft_sReg_2_double_write_error_read_AND_NOT_fft_ETC___d15 ;
  assign WILL_FIRE_RL_fft_linear_fft = CAN_FIRE_RL_fft_linear_fft ;

  // register fft_counter
  assign fft_counter$D_IN = fft_counter + 32'd1 ;
  assign fft_counter$EN =
	     WILL_FIRE_RL_fft_linear_fft && fft_counter_SLT_3___d6 ;

  // register fft_sReg_0
  assign fft_sReg_0$D_IN =
	     { x__h1864,
	       x__h9060,
	       x__h15312,
	       x__h21581,
	       x__h27833,
	       x__h34102,
	       x__h40354,
	       x__h46623,
	       x__h52870,
	       x__h58926,
	       x__h65167,
	       x__h71223,
	       x__h77464,
	       x__h83520,
	       x__h89761,
	       x__h95817 } ;
  assign fft_sReg_0$EN = CAN_FIRE_RL_fft_linear_fft ;

  // register fft_sReg_1
  assign fft_sReg_1$D_IN =
	     { x__h102702,
	       x__h109247,
	       x__h115491,
	       x__h121737,
	       x__h127981,
	       x__h134224,
	       x__h140466,
	       x__h146709,
	       x__h152946,
	       x__h158977,
	       x__h165210,
	       x__h171241,
	       x__h177474,
	       x__h183504,
	       x__h189735,
	       x__h195765 } ;
  assign fft_sReg_1$EN = CAN_FIRE_RL_fft_linear_fft ;

  // register fft_sReg_2
  assign fft_sReg_2$D_IN =
	     { x__h202630,
	       x__h210141,
	       x__h217346,
	       x__h223592,
	       x__h229836,
	       x__h237042,
	       x__h244245,
	       x__h250488,
	       x__h256725,
	       x__h263718,
	       x__h270912,
	       x__h276943,
	       x__h283176,
	       x__h290167,
	       x__h297359,
	       x__h303389 } ;
  assign fft_sReg_2$EN = CAN_FIRE_RL_fft_linear_fft ;

  // submodule fft_counter_double_write_error
  assign fft_counter_double_write_error$D_IN = 1'd1 ;
  assign fft_counter_double_write_error$EN =
	     WILL_FIRE_RL_fft_linear_fft && fft_counter_SLT_3___d6 ;

  // submodule fft_inputFIFO
  assign fft_inputFIFO$D_IN =
	     { request_put[511:448],
	       request_put[255:192],
	       request_put[383:320],
	       request_put[127:64],
	       request_put[447:384],
	       request_put[191:128],
	       request_put[319:256],
	       request_put[63:0] } ;
  assign fft_inputFIFO$ENQ = EN_request_put ;
  assign fft_inputFIFO$DEQ = CAN_FIRE_RL_fft_linear_fft ;
  assign fft_inputFIFO$CLR = 1'b0 ;

  // submodule fft_outputFIFO
  assign fft_outputFIFO$D_IN = fft_sReg_2 ;
  assign fft_outputFIFO$ENQ =
	     WILL_FIRE_RL_fft_linear_fft && fft_counter == 32'd3 ;
  assign fft_outputFIFO$DEQ = EN_response_get ;
  assign fft_outputFIFO$CLR = 1'b0 ;

  // submodule fft_sReg_0_double_write_error
  assign fft_sReg_0_double_write_error$D_IN = 1'd1 ;
  assign fft_sReg_0_double_write_error$EN = CAN_FIRE_RL_fft_linear_fft ;

  // submodule fft_sReg_1_double_write_error
  assign fft_sReg_1_double_write_error$D_IN = 1'd1 ;
  assign fft_sReg_1_double_write_error$EN = CAN_FIRE_RL_fft_linear_fft ;

  // submodule fft_sReg_2_double_write_error
  assign fft_sReg_2_double_write_error$D_IN = 1'd1 ;
  assign fft_sReg_2_double_write_error$EN = CAN_FIRE_RL_fft_linear_fft ;

  // remaining internal signals
  assign IF_NOT_IF_NOT_IF_fft_sReg_1_10_BIT_479_51_THEN_ETC___d789 =
	     (!x__h207074[47] &&
	      (x__h207074[31] || x__h207074[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h207074[47] &&
		 (!x__h207074[31] || ~x__h207074[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h207074[31:0]) ;
  assign IF_NOT_IF_NOT_IF_fft_sReg_1_10_BIT_511_12_THEN_ETC___d750 =
	     (!x__h210574[47] &&
	      (x__h210574[31] || x__h210574[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h210574[47] &&
		 (!x__h210574[31] || ~x__h210574[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h210574[31:0]) ;
  assign IF_fft_inputFIFO_first__0_BIT_127_70_THEN_NEG__ETC___d288 =
	     x__h90732[63:16] + { 32'd0, y_f__h91893 } ;
  assign IF_fft_inputFIFO_first__0_BIT_223_28_THEN_NEG__ETC___d246 =
	     x__h37392[63:16] + { 32'd0, y_f__h38501 } ;
  assign IF_fft_inputFIFO_first__0_BIT_255_87_THEN_NEG__ETC___d205 =
	     x__h78435[63:16] + { 32'd0, y_f__h79596 } ;
  assign IF_fft_inputFIFO_first__0_BIT_351_45_THEN_NEG__ETC___d163 =
	     x__h24871[63:16] + { 32'd0, y_f__h25980 } ;
  assign IF_fft_inputFIFO_first__0_BIT_383_04_THEN_NEG__ETC___d122 =
	     x__h66138[63:16] + { 32'd0, y_f__h67299 } ;
  assign IF_fft_inputFIFO_first__0_BIT_479_3_THEN_NEG_0_ETC___d81 =
	     x__h12350[63:16] + { 32'd0, y_f__h13459 } ;
  assign IF_fft_inputFIFO_first__0_BIT_511_2_THEN_NEG_0_ETC___d40 =
	     x__h53841[63:16] + { 32'd0, y_f__h55002 } ;
  assign IF_fft_inputFIFO_first__0_BIT_95_11_THEN_NEG_0_ETC___d329 =
	     x__h49913[63:16] + { 32'd0, y_f__h51022 } ;
  assign IF_fft_sReg_0_64_BIT_127_16_THEN_NEG_0_CONCAT__ETC___d634 =
	     x__h190696[63:16] + { 32'd0, y_f__h191845 } ;
  assign IF_fft_sReg_0_64_BIT_223_74_THEN_NEG_0_CONCAT__ETC___d592 =
	     x__h137508[63:16] + { 32'd0, y_f__h138613 } ;
  assign IF_fft_sReg_0_64_BIT_255_33_THEN_NEG_0_CONCAT__ETC___d551 =
	     x__h178435[63:16] + { 32'd0, y_f__h179584 } ;
  assign IF_fft_sReg_0_64_BIT_351_49_THEN_0_CONCAT_IF_f_ETC___d467 =
	     x__h119082[63:16] + { 32'd0, y_f__h120256 } ;
  assign IF_fft_sReg_0_64_BIT_383_91_THEN_0_CONCAT_IF_f_ETC___d509 =
	     x__h122583[63:16] + { 32'd0, y_f__h123690 } ;
  assign IF_fft_sReg_0_64_BIT_479_66_THEN_0_CONCAT_IF_f_ETC___d384 =
	     x__h106592[63:16] + { 32'd0, y_f__h107766 } ;
  assign IF_fft_sReg_0_64_BIT_511_08_THEN_0_CONCAT_IF_f_ETC___d426 =
	     x__h110093[63:16] + { 32'd0, y_f__h111200 } ;
  assign IF_fft_sReg_0_64_BIT_95_57_THEN_NEG_0_CONCAT_I_ETC___d675 =
	     x__h149993[63:16] + { 32'd0, y_f__h151098 } ;
  assign IF_fft_sReg_1_10_BIT_127_035_THEN_NEG_0_CONCAT_ETC___d1053 =
	     x__h298320[63:16] + { 32'd0, y_f__h299469 } ;
  assign IF_fft_sReg_1_10_BIT_223_19_THEN_IF_fft_sReg_1_ETC___d937 =
	     x__h234388[63:16] + { 32'd0, y_f__h235561 } ;
  assign IF_fft_sReg_1_10_BIT_223_19_THEN_NEG_IF_fft_sR_ETC___d1010 =
	     x__h241289[63:16] + { 32'd0, y_f__h242393 } ;
  assign IF_fft_sReg_1_10_BIT_223_19_THEN_NEG_fft_sReg__ETC___d923 =
	     x__h234494 * 32'd46341 ;
  assign IF_fft_sReg_1_10_BIT_223_19_THEN_NEG_fft_sReg__ETC___d996 =
	     x__h234494 * 32'd46340 ;
  assign IF_fft_sReg_1_10_BIT_255_80_THEN_IF_fft_sReg_1_ETC___d975 =
	     x__h237888[63:16] + { 32'd0, y_f__h238994 } ;
  assign IF_fft_sReg_1_10_BIT_255_80_THEN_NEG_IF_fft_sR_ETC___d898 =
	     x__h284137[63:16] + { 32'd0, y_f__h285285 } ;
  assign IF_fft_sReg_1_10_BIT_255_80_THEN_NEG_fft_sReg__ETC___d884 =
	     x__h237927 * 32'd46340 ;
  assign IF_fft_sReg_1_10_BIT_255_80_THEN_NEG_fft_sReg__ETC___d961 =
	     x__h237927 * 32'd46341 ;
  assign IF_fft_sReg_1_10_BIT_351_96_THEN_0_CONCAT_IF_f_ETC___d814 =
	     x__h220937[63:16] + { 32'd0, y_f__h222111 } ;
  assign IF_fft_sReg_1_10_BIT_383_38_THEN_0_CONCAT_IF_f_ETC___d856 =
	     x__h224438[63:16] + { 32'd0, y_f__h225545 } ;
  assign IF_fft_sReg_1_10_BIT_479_51_THEN_IF_fft_sReg_1_ETC___d769 =
	     x__h207487[63:16] + { 32'd0, y_f__h208660 } ;
  assign IF_fft_sReg_1_10_BIT_479_51_THEN_NEG_fft_sReg__ETC___d755 =
	     x__h207593 * 32'd46341 ;
  assign IF_fft_sReg_1_10_BIT_511_12_THEN_IF_fft_sReg_1_ETC___d730 =
	     x__h210987[63:16] + { 32'd0, y_f__h212093 } ;
  assign IF_fft_sReg_1_10_BIT_511_12_THEN_NEG_fft_sReg__ETC___d716 =
	     x__h211026 * 32'd46341 ;
  assign IF_fft_sReg_1_10_BIT_95_076_THEN_NEG_0_CONCAT__ETC___d1094 =
	     x__h253772[63:16] + { 32'd0, y_f__h254877 } ;
  assign _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_127_70__ETC___d274 =
	     { 16'd0,
	       fft_inputFIFO$D_OUT[127] ?
		 -fft_inputFIFO$D_OUT[127:96] :
		 fft_inputFIFO$D_OUT[127:96],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_223_28__ETC___d232 =
	     { 16'd0,
	       fft_inputFIFO$D_OUT[223] ?
		 -fft_inputFIFO$D_OUT[223:192] :
		 fft_inputFIFO$D_OUT[223:192],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_255_87__ETC___d191 =
	     { 16'd0,
	       fft_inputFIFO$D_OUT[255] ?
		 -fft_inputFIFO$D_OUT[255:224] :
		 fft_inputFIFO$D_OUT[255:224],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_351_45__ETC___d149 =
	     { 16'd0,
	       fft_inputFIFO$D_OUT[351] ?
		 -fft_inputFIFO$D_OUT[351:320] :
		 fft_inputFIFO$D_OUT[351:320],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_383_04__ETC___d108 =
	     { 16'd0,
	       fft_inputFIFO$D_OUT[383] ?
		 -fft_inputFIFO$D_OUT[383:352] :
		 fft_inputFIFO$D_OUT[383:352],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_479_3_T_ETC___d67 =
	     { 16'd0,
	       fft_inputFIFO$D_OUT[479] ?
		 -fft_inputFIFO$D_OUT[479:448] :
		 fft_inputFIFO$D_OUT[479:448],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_511_2_T_ETC___d26 =
	     { 16'd0,
	       fft_inputFIFO$D_OUT[511] ?
		 -fft_inputFIFO$D_OUT[511:480] :
		 fft_inputFIFO$D_OUT[511:480],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_95_11_T_ETC___d315 =
	     { 16'd0,
	       fft_inputFIFO$D_OUT[95] ?
		 -fft_inputFIFO$D_OUT[95:64] :
		 fft_inputFIFO$D_OUT[95:64],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_sReg_0_64_BIT_127_16_THEN_NEG__ETC___d620 =
	     { 16'd0,
	       fft_sReg_0[127] ? -fft_sReg_0[127:96] : fft_sReg_0[127:96],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_sReg_0_64_BIT_223_74_THEN_NEG__ETC___d578 =
	     { 16'd0,
	       fft_sReg_0[223] ? -fft_sReg_0[223:192] : fft_sReg_0[223:192],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_sReg_0_64_BIT_255_33_THEN_NEG__ETC___d537 =
	     { 16'd0,
	       fft_sReg_0[255] ? -fft_sReg_0[255:224] : fft_sReg_0[255:224],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_sReg_0_64_BIT_351_49_THEN_NEG__ETC___d453 =
	     { 16'd0,
	       fft_sReg_0[351] ? -fft_sReg_0[351:320] : fft_sReg_0[351:320],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_sReg_0_64_BIT_383_91_THEN_NEG__ETC___d495 =
	     { 16'd0,
	       fft_sReg_0[383] ? -fft_sReg_0[383:352] : fft_sReg_0[383:352],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_sReg_0_64_BIT_479_66_THEN_NEG__ETC___d370 =
	     { 16'd0,
	       fft_sReg_0[479] ? -fft_sReg_0[479:448] : fft_sReg_0[479:448],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_sReg_0_64_BIT_511_08_THEN_NEG__ETC___d412 =
	     { 16'd0,
	       fft_sReg_0[511] ? -fft_sReg_0[511:480] : fft_sReg_0[511:480],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_sReg_0_64_BIT_95_57_THEN_NEG_f_ETC___d661 =
	     { 16'd0,
	       fft_sReg_0[95] ? -fft_sReg_0[95:64] : fft_sReg_0[95:64],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_sReg_1_10_BIT_127_035_THEN_NEG_ETC___d1039 =
	     { 16'd0,
	       fft_sReg_1[127] ? -fft_sReg_1[127:96] : fft_sReg_1[127:96],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_sReg_1_10_BIT_351_96_THEN_NEG__ETC___d800 =
	     { 16'd0,
	       fft_sReg_1[351] ? -fft_sReg_1[351:320] : fft_sReg_1[351:320],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_sReg_1_10_BIT_383_38_THEN_NEG__ETC___d842 =
	     { 16'd0,
	       fft_sReg_1[383] ? -fft_sReg_1[383:352] : fft_sReg_1[383:352],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_sReg_1_10_BIT_95_076_THEN_NEG__ETC___d1080 =
	     { 16'd0,
	       fft_sReg_1[95] ? -fft_sReg_1[95:64] : fft_sReg_1[95:64],
	       16'd0 } ;
  assign fft_counter_SLT_3___d6 =
	     (fft_counter ^ 32'h80000000) < 32'h80000003 ;
  assign fft_sReg_2_double_write_error_read_AND_NOT_fft_ETC___d15 =
	     fft_sReg_2_double_write_error$Q_OUT &&
	     (!fft_counter_SLT_3___d6 ||
	      fft_counter_double_write_error$Q_OUT) &&
	     (fft_counter != 32'd3 || fft_outputFIFO$FULL_N) ;
  assign x__h102702 = fft_sReg_0[447:416] - x__h153080 ;
  assign x__h106179 =
	     (!x__h106592[63] &&
	      IF_fft_sReg_0_64_BIT_479_66_THEN_0_CONCAT_IF_f_ETC___d384[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_0_64_BIT_479_66_THEN_0_CONCAT_IF_f_ETC___d384 ;
  assign x__h106592 =
	     fft_sReg_0[479] ?
	       _0_CONCAT_IF_fft_sReg_0_64_BIT_479_66_THEN_NEG__ETC___d370 :
	       -_0_CONCAT_IF_fft_sReg_0_64_BIT_479_66_THEN_NEG__ETC___d370 ;
  assign x__h109247 = fft_sReg_0[415:384] - x__h109266 ;
  assign x__h109266 =
	     (!x__h109680[47] &&
	      (x__h109680[31] || x__h109680[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h109680[47] &&
		 (!x__h109680[31] || ~x__h109680[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h109680[31:0]) ;
  assign x__h109680 =
	     (!x__h110093[63] &&
	      IF_fft_sReg_0_64_BIT_511_08_THEN_0_CONCAT_IF_f_ETC___d426[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_0_64_BIT_511_08_THEN_0_CONCAT_IF_f_ETC___d426 ;
  assign x__h110093 =
	     fft_sReg_0[511] ?
	       _0_CONCAT_IF_fft_sReg_0_64_BIT_511_08_THEN_NEG__ETC___d412 :
	       -_0_CONCAT_IF_fft_sReg_0_64_BIT_511_08_THEN_NEG__ETC___d412 ;
  assign x__h115491 = fft_sReg_0[319:288] - x__h165344 ;
  assign x__h118669 =
	     (!x__h119082[63] &&
	      IF_fft_sReg_0_64_BIT_351_49_THEN_0_CONCAT_IF_f_ETC___d467[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_0_64_BIT_351_49_THEN_0_CONCAT_IF_f_ETC___d467 ;
  assign x__h119082 =
	     fft_sReg_0[351] ?
	       _0_CONCAT_IF_fft_sReg_0_64_BIT_351_49_THEN_NEG__ETC___d453 :
	       -_0_CONCAT_IF_fft_sReg_0_64_BIT_351_49_THEN_NEG__ETC___d453 ;
  assign x__h11937 =
	     (!x__h12350[63] &&
	      IF_fft_inputFIFO_first__0_BIT_479_3_THEN_NEG_0_ETC___d81[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputFIFO_first__0_BIT_479_3_THEN_NEG_0_ETC___d81 ;
  assign x__h121737 = fft_sReg_0[287:256] - x__h121756 ;
  assign x__h121756 =
	     (!x__h122170[47] &&
	      (x__h122170[31] || x__h122170[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h122170[47] &&
		 (!x__h122170[31] || ~x__h122170[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h122170[31:0]) ;
  assign x__h122170 =
	     (!x__h122583[63] &&
	      IF_fft_sReg_0_64_BIT_383_91_THEN_0_CONCAT_IF_f_ETC___d509[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_0_64_BIT_383_91_THEN_0_CONCAT_IF_f_ETC___d509 ;
  assign x__h122583 =
	     fft_sReg_0[383] ?
	       _0_CONCAT_IF_fft_sReg_0_64_BIT_383_91_THEN_NEG__ETC___d495 :
	       -_0_CONCAT_IF_fft_sReg_0_64_BIT_383_91_THEN_NEG__ETC___d495 ;
  assign x__h12350 =
	     fft_inputFIFO$D_OUT[479] ?
	       -_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_479_3_T_ETC___d67 :
	       _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_479_3_T_ETC___d67 ;
  assign x__h127981 = fft_sReg_0[191:160] - x__h177608 ;
  assign x__h134224 = fft_sReg_0[159:128] - x__h134243 ;
  assign x__h134243 =
	     (!x__h137095[47] &&
	      (x__h137095[31] || x__h137095[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h137095[47] &&
		 (!x__h137095[31] || ~x__h137095[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h137095[31:0]) ;
  assign x__h137095 =
	     (!x__h137508[63] &&
	      IF_fft_sReg_0_64_BIT_223_74_THEN_NEG_0_CONCAT__ETC___d592[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_0_64_BIT_223_74_THEN_NEG_0_CONCAT__ETC___d592 ;
  assign x__h137508 =
	     fft_sReg_0[223] ?
	       -_0_CONCAT_IF_fft_sReg_0_64_BIT_223_74_THEN_NEG__ETC___d578 :
	       _0_CONCAT_IF_fft_sReg_0_64_BIT_223_74_THEN_NEG__ETC___d578 ;
  assign x__h140466 = fft_sReg_0[63:32] - x__h189869 ;
  assign x__h146709 = fft_sReg_0[31:0] - x__h146728 ;
  assign x__h146728 =
	     (!x__h149580[47] &&
	      (x__h149580[31] || x__h149580[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h149580[47] &&
		 (!x__h149580[31] || ~x__h149580[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h149580[31:0]) ;
  assign x__h149580 =
	     (!x__h149993[63] &&
	      IF_fft_sReg_0_64_BIT_95_57_THEN_NEG_0_CONCAT_I_ETC___d675[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_0_64_BIT_95_57_THEN_NEG_0_CONCAT_I_ETC___d675 ;
  assign x__h149993 =
	     fft_sReg_0[95] ?
	       -_0_CONCAT_IF_fft_sReg_0_64_BIT_95_57_THEN_NEG_f_ETC___d661 :
	       _0_CONCAT_IF_fft_sReg_0_64_BIT_95_57_THEN_NEG_f_ETC___d661 ;
  assign x__h152946 = fft_sReg_0[447:416] + x__h153080 ;
  assign x__h153080 =
	     32'd0 -
	     ((!x__h106179[47] &&
	       (x__h106179[31] || x__h106179[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h106179[47] &&
		  (!x__h106179[31] || ~x__h106179[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h106179[31:0])) ;
  assign x__h15312 = fft_inputFIFO$D_OUT[319:288] - x__h65311 ;
  assign x__h158977 = fft_sReg_0[415:384] + x__h109266 ;
  assign x__h165210 = fft_sReg_0[319:288] + x__h165344 ;
  assign x__h165344 =
	     32'd0 -
	     ((!x__h118669[47] &&
	       (x__h118669[31] || x__h118669[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h118669[47] &&
		  (!x__h118669[31] || ~x__h118669[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h118669[31:0])) ;
  assign x__h171241 = fft_sReg_0[287:256] + x__h121756 ;
  assign x__h177474 = fft_sReg_0[191:160] + x__h177608 ;
  assign x__h177608 =
	     (!x__h178022[47] &&
	      (x__h178022[31] || x__h178022[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h178022[47] &&
		 (!x__h178022[31] || ~x__h178022[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h178022[31:0]) ;
  assign x__h178022 =
	     (!x__h178435[63] &&
	      IF_fft_sReg_0_64_BIT_255_33_THEN_NEG_0_CONCAT__ETC___d551[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_0_64_BIT_255_33_THEN_NEG_0_CONCAT__ETC___d551 ;
  assign x__h178435 =
	     fft_sReg_0[255] ?
	       -_0_CONCAT_IF_fft_sReg_0_64_BIT_255_33_THEN_NEG__ETC___d537 :
	       _0_CONCAT_IF_fft_sReg_0_64_BIT_255_33_THEN_NEG__ETC___d537 ;
  assign x__h183504 = fft_sReg_0[159:128] + x__h134243 ;
  assign x__h1864 = fft_inputFIFO$D_OUT[447:416] - x__h53014 ;
  assign x__h189735 = fft_sReg_0[63:32] + x__h189869 ;
  assign x__h189869 =
	     (!x__h190283[47] &&
	      (x__h190283[31] || x__h190283[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h190283[47] &&
		 (!x__h190283[31] || ~x__h190283[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h190283[31:0]) ;
  assign x__h190283 =
	     (!x__h190696[63] &&
	      IF_fft_sReg_0_64_BIT_127_16_THEN_NEG_0_CONCAT__ETC___d634[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_0_64_BIT_127_16_THEN_NEG_0_CONCAT__ETC___d634 ;
  assign x__h190696 =
	     fft_sReg_0[127] ?
	       -_0_CONCAT_IF_fft_sReg_0_64_BIT_127_16_THEN_NEG__ETC___d620 :
	       _0_CONCAT_IF_fft_sReg_0_64_BIT_127_16_THEN_NEG__ETC___d620 ;
  assign x__h195765 = fft_sReg_0[31:0] + x__h146728 ;
  assign x__h202630 = fft_sReg_1[447:416] - x__h256859 ;
  assign x__h207074 =
	     (!x__h207487[63] &&
	      IF_fft_sReg_1_10_BIT_479_51_THEN_IF_fft_sReg_1_ETC___d769[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_1_10_BIT_479_51_THEN_IF_fft_sReg_1_ETC___d769 ;
  assign x__h207487 =
	     fft_sReg_1[479] ?
	       IF_fft_sReg_1_10_BIT_479_51_THEN_NEG_fft_sReg__ETC___d755 :
	       -IF_fft_sReg_1_10_BIT_479_51_THEN_NEG_fft_sReg__ETC___d755 ;
  assign x__h207593 =
	     fft_sReg_1[479] ? -fft_sReg_1[479:448] : fft_sReg_1[479:448] ;
  assign x__h210141 = fft_sReg_1[415:384] - x__h210160 ;
  assign x__h210160 =
	     IF_NOT_IF_NOT_IF_fft_sReg_1_10_BIT_511_12_THEN_ETC___d750 +
	     IF_NOT_IF_NOT_IF_fft_sReg_1_10_BIT_479_51_THEN_ETC___d789 ;
  assign x__h210574 =
	     (!x__h210987[63] &&
	      IF_fft_sReg_1_10_BIT_511_12_THEN_IF_fft_sReg_1_ETC___d730[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_1_10_BIT_511_12_THEN_IF_fft_sReg_1_ETC___d730 ;
  assign x__h210987 =
	     fft_sReg_1[511] ?
	       IF_fft_sReg_1_10_BIT_511_12_THEN_NEG_fft_sReg__ETC___d716 :
	       -IF_fft_sReg_1_10_BIT_511_12_THEN_NEG_fft_sReg__ETC___d716 ;
  assign x__h211026 =
	     fft_sReg_1[511] ? -fft_sReg_1[511:480] : fft_sReg_1[511:480] ;
  assign x__h21581 = fft_inputFIFO$D_OUT[287:256] - x__h21602 ;
  assign x__h21602 =
	     (!x__h24458[47] &&
	      (x__h24458[31] || x__h24458[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h24458[47] &&
		 (!x__h24458[31] || ~x__h24458[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h24458[31:0]) ;
  assign x__h217346 = fft_sReg_1[319:288] - x__h271046 ;
  assign x__h220524 =
	     (!x__h220937[63] &&
	      IF_fft_sReg_1_10_BIT_351_96_THEN_0_CONCAT_IF_f_ETC___d814[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_1_10_BIT_351_96_THEN_0_CONCAT_IF_f_ETC___d814 ;
  assign x__h220937 =
	     fft_sReg_1[351] ?
	       _0_CONCAT_IF_fft_sReg_1_10_BIT_351_96_THEN_NEG__ETC___d800 :
	       -_0_CONCAT_IF_fft_sReg_1_10_BIT_351_96_THEN_NEG__ETC___d800 ;
  assign x__h223592 = fft_sReg_1[287:256] - x__h223611 ;
  assign x__h223611 =
	     (!x__h224025[47] &&
	      (x__h224025[31] || x__h224025[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h224025[47] &&
		 (!x__h224025[31] || ~x__h224025[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h224025[31:0]) ;
  assign x__h224025 =
	     (!x__h224438[63] &&
	      IF_fft_sReg_1_10_BIT_383_38_THEN_0_CONCAT_IF_f_ETC___d856[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_1_10_BIT_383_38_THEN_0_CONCAT_IF_f_ETC___d856 ;
  assign x__h224438 =
	     fft_sReg_1[383] ?
	       _0_CONCAT_IF_fft_sReg_1_10_BIT_383_38_THEN_NEG__ETC___d842 :
	       -_0_CONCAT_IF_fft_sReg_1_10_BIT_383_38_THEN_NEG__ETC___d842 ;
  assign x__h229836 = fft_sReg_1[191:160] - x__h283310 ;
  assign x__h233975 =
	     (!x__h234388[63] &&
	      IF_fft_sReg_1_10_BIT_223_19_THEN_IF_fft_sReg_1_ETC___d937[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_1_10_BIT_223_19_THEN_IF_fft_sReg_1_ETC___d937 ;
  assign x__h234388 =
	     fft_sReg_1[223] ?
	       IF_fft_sReg_1_10_BIT_223_19_THEN_NEG_fft_sReg__ETC___d923 :
	       -IF_fft_sReg_1_10_BIT_223_19_THEN_NEG_fft_sReg__ETC___d923 ;
  assign x__h234494 =
	     fft_sReg_1[223] ? -fft_sReg_1[223:192] : fft_sReg_1[223:192] ;
  assign x__h237042 = fft_sReg_1[159:128] - x__h237061 ;
  assign x__h237061 =
	     ((!x__h237475[47] &&
	       (x__h237475[31] || x__h237475[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h237475[47] &&
		  (!x__h237475[31] || ~x__h237475[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h237475[31:0])) +
	     ((!x__h240876[47] &&
	       (x__h240876[31] || x__h240876[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h240876[47] &&
		  (!x__h240876[31] || ~x__h240876[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h240876[31:0])) ;
  assign x__h237475 =
	     (!x__h237888[63] &&
	      IF_fft_sReg_1_10_BIT_255_80_THEN_IF_fft_sReg_1_ETC___d975[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_1_10_BIT_255_80_THEN_IF_fft_sReg_1_ETC___d975 ;
  assign x__h237888 =
	     fft_sReg_1[255] ?
	       IF_fft_sReg_1_10_BIT_255_80_THEN_NEG_fft_sReg__ETC___d961 :
	       -IF_fft_sReg_1_10_BIT_255_80_THEN_NEG_fft_sReg__ETC___d961 ;
  assign x__h237927 =
	     fft_sReg_1[255] ? -fft_sReg_1[255:224] : fft_sReg_1[255:224] ;
  assign x__h240876 =
	     (!x__h241289[63] &&
	      IF_fft_sReg_1_10_BIT_223_19_THEN_NEG_IF_fft_sR_ETC___d1010[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_1_10_BIT_223_19_THEN_NEG_IF_fft_sR_ETC___d1010 ;
  assign x__h241289 =
	     fft_sReg_1[223] ?
	       -IF_fft_sReg_1_10_BIT_223_19_THEN_NEG_fft_sReg__ETC___d996 :
	       IF_fft_sReg_1_10_BIT_223_19_THEN_NEG_fft_sReg__ETC___d996 ;
  assign x__h244245 = fft_sReg_1[63:32] - x__h297493 ;
  assign x__h24458 =
	     (!x__h24871[63] &&
	      IF_fft_inputFIFO_first__0_BIT_351_45_THEN_NEG__ETC___d163[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputFIFO_first__0_BIT_351_45_THEN_NEG__ETC___d163 ;
  assign x__h24871 =
	     fft_inputFIFO$D_OUT[351] ?
	       -_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_351_45__ETC___d149 :
	       _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_351_45__ETC___d149 ;
  assign x__h250488 = fft_sReg_1[31:0] - x__h250507 ;
  assign x__h250507 =
	     (!x__h253359[47] &&
	      (x__h253359[31] || x__h253359[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h253359[47] &&
		 (!x__h253359[31] || ~x__h253359[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h253359[31:0]) ;
  assign x__h253359 =
	     (!x__h253772[63] &&
	      IF_fft_sReg_1_10_BIT_95_076_THEN_NEG_0_CONCAT__ETC___d1094[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_1_10_BIT_95_076_THEN_NEG_0_CONCAT__ETC___d1094 ;
  assign x__h253772 =
	     fft_sReg_1[95] ?
	       -_0_CONCAT_IF_fft_sReg_1_10_BIT_95_076_THEN_NEG__ETC___d1080 :
	       _0_CONCAT_IF_fft_sReg_1_10_BIT_95_076_THEN_NEG__ETC___d1080 ;
  assign x__h256725 = fft_sReg_1[447:416] + x__h256859 ;
  assign x__h256859 =
	     IF_NOT_IF_NOT_IF_fft_sReg_1_10_BIT_511_12_THEN_ETC___d750 -
	     IF_NOT_IF_NOT_IF_fft_sReg_1_10_BIT_479_51_THEN_ETC___d789 ;
  assign x__h263718 = fft_sReg_1[415:384] + x__h210160 ;
  assign x__h270912 = fft_sReg_1[319:288] + x__h271046 ;
  assign x__h271046 =
	     32'd0 -
	     ((!x__h220524[47] &&
	       (x__h220524[31] || x__h220524[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h220524[47] &&
		  (!x__h220524[31] || ~x__h220524[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h220524[31:0])) ;
  assign x__h276943 = fft_sReg_1[287:256] + x__h223611 ;
  assign x__h27833 = fft_inputFIFO$D_OUT[191:160] - x__h77608 ;
  assign x__h283176 = fft_sReg_1[191:160] + x__h283310 ;
  assign x__h283310 =
	     ((!x__h283724[47] &&
	       (x__h283724[31] || x__h283724[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h283724[47] &&
		  (!x__h283724[31] || ~x__h283724[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h283724[31:0])) -
	     ((!x__h233975[47] &&
	       (x__h233975[31] || x__h233975[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h233975[47] &&
		  (!x__h233975[31] || ~x__h233975[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h233975[31:0])) ;
  assign x__h283724 =
	     (!x__h284137[63] &&
	      IF_fft_sReg_1_10_BIT_255_80_THEN_NEG_IF_fft_sR_ETC___d898[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_1_10_BIT_255_80_THEN_NEG_IF_fft_sR_ETC___d898 ;
  assign x__h284137 =
	     fft_sReg_1[255] ?
	       -IF_fft_sReg_1_10_BIT_255_80_THEN_NEG_fft_sReg__ETC___d884 :
	       IF_fft_sReg_1_10_BIT_255_80_THEN_NEG_fft_sReg__ETC___d884 ;
  assign x__h290167 = fft_sReg_1[159:128] + x__h237061 ;
  assign x__h297359 = fft_sReg_1[63:32] + x__h297493 ;
  assign x__h297493 =
	     (!x__h297907[47] &&
	      (x__h297907[31] || x__h297907[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h297907[47] &&
		 (!x__h297907[31] || ~x__h297907[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h297907[31:0]) ;
  assign x__h297907 =
	     (!x__h298320[63] &&
	      IF_fft_sReg_1_10_BIT_127_035_THEN_NEG_0_CONCAT_ETC___d1053[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_sReg_1_10_BIT_127_035_THEN_NEG_0_CONCAT_ETC___d1053 ;
  assign x__h298320 =
	     fft_sReg_1[127] ?
	       -_0_CONCAT_IF_fft_sReg_1_10_BIT_127_035_THEN_NEG_ETC___d1039 :
	       _0_CONCAT_IF_fft_sReg_1_10_BIT_127_035_THEN_NEG_ETC___d1039 ;
  assign x__h303389 = fft_sReg_1[31:0] + x__h250507 ;
  assign x__h34102 = fft_inputFIFO$D_OUT[159:128] - x__h34123 ;
  assign x__h34123 =
	     (!x__h36979[47] &&
	      (x__h36979[31] || x__h36979[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h36979[47] &&
		 (!x__h36979[31] || ~x__h36979[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h36979[31:0]) ;
  assign x__h36979 =
	     (!x__h37392[63] &&
	      IF_fft_inputFIFO_first__0_BIT_223_28_THEN_NEG__ETC___d246[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputFIFO_first__0_BIT_223_28_THEN_NEG__ETC___d246 ;
  assign x__h37392 =
	     fft_inputFIFO$D_OUT[223] ?
	       -_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_223_28__ETC___d232 :
	       _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_223_28__ETC___d232 ;
  assign x__h40354 = fft_inputFIFO$D_OUT[63:32] - x__h89905 ;
  assign x__h46623 = fft_inputFIFO$D_OUT[31:0] - x__h46644 ;
  assign x__h46644 =
	     (!x__h49500[47] &&
	      (x__h49500[31] || x__h49500[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h49500[47] &&
		 (!x__h49500[31] || ~x__h49500[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h49500[31:0]) ;
  assign x__h49500 =
	     (!x__h49913[63] &&
	      IF_fft_inputFIFO_first__0_BIT_95_11_THEN_NEG_0_ETC___d329[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputFIFO_first__0_BIT_95_11_THEN_NEG_0_ETC___d329 ;
  assign x__h49913 =
	     fft_inputFIFO$D_OUT[95] ?
	       -_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_95_11_T_ETC___d315 :
	       _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_95_11_T_ETC___d315 ;
  assign x__h52870 = fft_inputFIFO$D_OUT[447:416] + x__h53014 ;
  assign x__h53014 =
	     (!x__h53428[47] &&
	      (x__h53428[31] || x__h53428[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h53428[47] &&
		 (!x__h53428[31] || ~x__h53428[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h53428[31:0]) ;
  assign x__h53428 =
	     (!x__h53841[63] &&
	      IF_fft_inputFIFO_first__0_BIT_511_2_THEN_NEG_0_ETC___d40[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputFIFO_first__0_BIT_511_2_THEN_NEG_0_ETC___d40 ;
  assign x__h53841 =
	     fft_inputFIFO$D_OUT[511] ?
	       -_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_511_2_T_ETC___d26 :
	       _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_511_2_T_ETC___d26 ;
  assign x__h58926 = fft_inputFIFO$D_OUT[415:384] + x__h9081 ;
  assign x__h65167 = fft_inputFIFO$D_OUT[319:288] + x__h65311 ;
  assign x__h65311 =
	     (!x__h65725[47] &&
	      (x__h65725[31] || x__h65725[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h65725[47] &&
		 (!x__h65725[31] || ~x__h65725[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h65725[31:0]) ;
  assign x__h65725 =
	     (!x__h66138[63] &&
	      IF_fft_inputFIFO_first__0_BIT_383_04_THEN_NEG__ETC___d122[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputFIFO_first__0_BIT_383_04_THEN_NEG__ETC___d122 ;
  assign x__h66138 =
	     fft_inputFIFO$D_OUT[383] ?
	       -_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_383_04__ETC___d108 :
	       _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_383_04__ETC___d108 ;
  assign x__h71223 = fft_inputFIFO$D_OUT[287:256] + x__h21602 ;
  assign x__h77464 = fft_inputFIFO$D_OUT[191:160] + x__h77608 ;
  assign x__h77608 =
	     (!x__h78022[47] &&
	      (x__h78022[31] || x__h78022[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h78022[47] &&
		 (!x__h78022[31] || ~x__h78022[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h78022[31:0]) ;
  assign x__h78022 =
	     (!x__h78435[63] &&
	      IF_fft_inputFIFO_first__0_BIT_255_87_THEN_NEG__ETC___d205[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputFIFO_first__0_BIT_255_87_THEN_NEG__ETC___d205 ;
  assign x__h78435 =
	     fft_inputFIFO$D_OUT[255] ?
	       -_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_255_87__ETC___d191 :
	       _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_255_87__ETC___d191 ;
  assign x__h83520 = fft_inputFIFO$D_OUT[159:128] + x__h34123 ;
  assign x__h89761 = fft_inputFIFO$D_OUT[63:32] + x__h89905 ;
  assign x__h89905 =
	     (!x__h90319[47] &&
	      (x__h90319[31] || x__h90319[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h90319[47] &&
		 (!x__h90319[31] || ~x__h90319[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h90319[31:0]) ;
  assign x__h90319 =
	     (!x__h90732[63] &&
	      IF_fft_inputFIFO_first__0_BIT_127_70_THEN_NEG__ETC___d288[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputFIFO_first__0_BIT_127_70_THEN_NEG__ETC___d288 ;
  assign x__h9060 = fft_inputFIFO$D_OUT[415:384] - x__h9081 ;
  assign x__h90732 =
	     fft_inputFIFO$D_OUT[127] ?
	       -_0_CONCAT_IF_fft_inputFIFO_first__0_BIT_127_70__ETC___d274 :
	       _0_CONCAT_IF_fft_inputFIFO_first__0_BIT_127_70__ETC___d274 ;
  assign x__h9081 =
	     (!x__h11937[47] &&
	      (x__h11937[31] || x__h11937[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h11937[47] &&
		 (!x__h11937[31] || ~x__h11937[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h11937[31:0]) ;
  assign x__h95817 = fft_inputFIFO$D_OUT[31:0] + x__h46644 ;
  assign y_f__h107766 =
	     (x__h106592[15] &&
	      (x__h106592[63] || x__h106592[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h111200 =
	     (x__h110093[15] &&
	      (x__h110093[63] || x__h110093[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h120256 =
	     (x__h119082[15] &&
	      (x__h119082[63] || x__h119082[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h123690 =
	     (x__h122583[15] &&
	      (x__h122583[63] || x__h122583[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h13459 =
	     (x__h12350[15] && (x__h12350[63] || x__h12350[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h138613 =
	     (x__h137508[15] &&
	      (x__h137508[63] || x__h137508[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h151098 =
	     (x__h149993[15] &&
	      (x__h149993[63] || x__h149993[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h179584 =
	     (x__h178435[15] &&
	      (x__h178435[63] || x__h178435[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h191845 =
	     (x__h190696[15] &&
	      (x__h190696[63] || x__h190696[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h208660 =
	     (x__h207487[15] &&
	      (x__h207487[63] || x__h207487[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h212093 =
	     (x__h210987[15] &&
	      (x__h210987[63] || x__h210987[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h222111 =
	     (x__h220937[15] &&
	      (x__h220937[63] || x__h220937[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h225545 =
	     (x__h224438[15] &&
	      (x__h224438[63] || x__h224438[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h235561 =
	     (x__h234388[15] &&
	      (x__h234388[63] || x__h234388[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h238994 =
	     (x__h237888[15] &&
	      (x__h237888[63] || x__h237888[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h242393 =
	     (x__h241289[15] &&
	      (x__h241289[63] || x__h241289[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h254877 =
	     (x__h253772[15] &&
	      (x__h253772[63] || x__h253772[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h25980 =
	     (x__h24871[15] && (x__h24871[63] || x__h24871[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h285285 =
	     (x__h284137[15] &&
	      (x__h284137[63] || x__h284137[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h299469 =
	     (x__h298320[15] &&
	      (x__h298320[63] || x__h298320[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h38501 =
	     (x__h37392[15] && (x__h37392[63] || x__h37392[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h51022 =
	     (x__h49913[15] && (x__h49913[63] || x__h49913[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h55002 =
	     (x__h53841[15] && (x__h53841[63] || x__h53841[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h67299 =
	     (x__h66138[15] && (x__h66138[63] || x__h66138[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h79596 =
	     (x__h78435[15] && (x__h78435[63] || x__h78435[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h91893 =
	     (x__h90732[15] && (x__h90732[63] || x__h90732[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        fft_counter <= `BSV_ASSIGNMENT_DELAY 32'd0;
      end
    else
      begin
        if (fft_counter$EN)
	  fft_counter <= `BSV_ASSIGNMENT_DELAY fft_counter$D_IN;
      end
    if (fft_sReg_0$EN) fft_sReg_0 <= `BSV_ASSIGNMENT_DELAY fft_sReg_0$D_IN;
    if (fft_sReg_1$EN) fft_sReg_1 <= `BSV_ASSIGNMENT_DELAY fft_sReg_1$D_IN;
    if (fft_sReg_2$EN) fft_sReg_2 <= `BSV_ASSIGNMENT_DELAY fft_sReg_2$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    fft_counter = 32'hAAAAAAAA;
    fft_sReg_0 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fft_sReg_1 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fft_sReg_2 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkFFT

